
扶老奶奶过街问题 (提示： 逻辑思维解题 + 枚举法）
一共有5个红领巾，编号分别为A、B、C、D、E，老奶奶被他们其中一个扶过了马路。

　　五个红领巾各自说话：

　　A ：我和E都没有扶老奶奶

　　B ：老奶奶是被C和E其中一个扶过大街的

　　C ：老奶奶是被我和D其中一个扶过大街的

　　D ：B和C都没有扶老奶奶过街

　　E ：我没有扶老奶奶


　　已知五个红领巾中有且只有２个人说的是真话，请问是谁扶这老奶奶过了街？

　　若有多个答案，在一行中输出，编号之间用空格隔开。








============================================================

MOOC清华《程序设计基础》期末考试第6题：鸡兔同笼问题
题目描述

经典的鸡兔同笼问题，现在请你用循环的方法解决。

假设共有鸡兔N只，脚数共有M只，利用循环编写程序求鸡和兔的数量。

输入格式
两个正整数N，M，用空格隔开。N,M均小于100。

输出格式
两个整数，分别代表鸡和兔的个数

样例输入


30 90
样例输出


15 15








======================================================================
开灯游戏 （提示：使用枚举法）
问题描述
　　有9盏灯与9个开关，编号都是1~9。

　　每个开关能控制若干盏灯，按下一次会改变其控制的灯的状态(亮的变成不亮，不亮变成亮的)。

　　具体如下：

　　第一个开关控制第二，第四盏灯；

　　第二个开关控制第一，第三，第五盏灯；

　　第三个开关控制第二，第六盏灯；

　　第四个开关控制第一，第五，第七盏灯；

　　第五个开关控制第二，第四，第六，第八盏灯；

　　第六个开关控制第三，第五，第九盏灯；

　　第七个开关控制第四，第八盏灯；

　　第八个开关控制第五，第七，第九盏灯；

　　第九个开关控制第六，第八盏灯。

　　开始时所有灯都是熄灭的，开关是关闭着的。要求按下若干开关后，使得只有4盏灯亮着。
输出格式
　　输出所有可能的方案，每行一个方案，每一行有9个字符，从左往右第i个字符表示第i个开关的状态("0"表示关闭，"1"表示打开)，按字典序输出。下面的样例输出只是部分方案。
样例输出
000001011
000001110
000001111




======================================================================
学做菜（提示：使用枚举法）
问题描述
　　涛涛立志要做新好青年，他最近在学做菜。由于技术还很生疏，他只会用鸡蛋，西红柿，鸡丁，辣酱这四种原料来做菜，我们给这四种原料标上字母A,B,C,D。
　　涛涛现在会做的菜有五种：
　　1、 西红柿炒鸡蛋 原料：AABDD
　　2、 酸辣鸡丁 原料：ABCD
　　3、 宫保鸡丁 原料：CCD
　　4、 水煮西红柿 原料：BBB
　　5、 怪味蛋 原料：AD
　　这天早上，开开去早市给涛涛买了一些原料回来。由于事先没有什么计划，涛涛决定，对于现存的原料，每次尽量做菜单上靠前（即编号小）的菜。
　　现在请你写一个程序，判断一下开开和涛涛中午能吃到哪些菜。
输入格式
　　共4个整数a,b,c,d。分别表示开开买的A,B,C,D这4种原料的数量。每种原料不会超过30份。
输出格式
　　输出5行。其中第i行表示涛涛做的第i种菜的数目。
样例输入
3
1
2
4
样例输出
1
0
1
0
1





==========================================
MOOC清华《程序设计基础》期末考试第1题：解三元一次方程
题目描述

有形如AB*C+A=y的方程，其中ABC均可以取0-9的数字，y由输入给出，求可以使方程成立的ABC各是多少（答案唯一，ABC可以相同，但A不可为0）

以A=1，B=1，C=1为例，上式变为11*1+1=12，所以y=12时，A=B=C=1是使方程成立的一个解

输入格式
y

输出格式
依次输出A B C，空格隔开

样例输入

12
样例输出

1 1 1








======================================================================
杨辉三角形 （提示：使用二维数组）
问题描述
　　杨辉三角形又称Pascal三角形，它的第i+1行是(a+b)i的展开式的系数。
　　它的一个重要性质是，三角形中的每个数字等于它两肩上的数字相加。
　　下面给出了杨辉三角形的前4行：
　　1
　　1 1
　　1 2 1
　　1 3 3 1
　　给出n，输出它的前n行。
输入格式
　　输入包含一个数n。1<=n<=34
输出格式
　　输出杨辉三角形的前n行。(空格的多少不作要求，只要使用单个空格分隔即可。)
样例输入
4
样例输出
1
1 1
1 2 1
1 3 3 1











======================================================================
连续正整数的和
问题描述
　　78这个数可以表示为连续正整数的和，1+2+3+......+12，18+19+20+21，25+26+27。
　　输入一个正整数 n(<=10000)
　　输出 m 行(n有m种表示法)，每行是两个正整数a，b，表示a+(a+1)+...+b=n。
　　对于多种表示法，a小的方案先输出。
样例输入
78
样例输出
1 12
18 21
25 27




========================================
D3569. 那些年，你们系的女孩

问题描述
　　那些年，你们系的女孩很少。为了逃避这个事实，在一份记录那些年女生数量的文本文件中采用了暗码。在这份文件中记录了一些小于10000的正整数。实际的女生数量=正整数十进制表示下每一位上的数字之和。
　　比如，在这份文件的中，某届7字班女生数量暗码的那一行的整数值为5723，则该届女生的数量为5+7+2+3=17人。
　　现在给你这份文本文件，计算出各届女生的实际数量，分行输出到另一个文件中。
输入格式
　　若干个正整数，以换行分隔。文件记录的那些年份数不超过一万年，也就是文件中的正整数个数不超过10000个。
输出格式
　　若干行，依照输入顺序，逐行输出暗码对应的女生数量。
样例输入
　　9809
　　7034
　　4404
　　7714
　　4821
　　2738
　　6497
　　7758
　　3677
　　768
样例输出
　　26
　　14
　　12
　　19
　　15
　　20
　　26
　　27
　　23
　　21
说明
　　此题使用文件输入输出，在所给代码的函数thoseyears的参数中，file1为输入文件名，file2为输出文件名。
输入方法提示
　　请使用以下方式输入判断文件末尾：
　　ifstream fin(文件名);
　　int n;
　　while (fin >> n) {
　　}
　　也就是说fin >> n如果为真，说明输入成功；如果为假说明输入失败，文件中已没有数字。不要使用fin.eof()判断，因为文件末尾可能会有换行符。

________________________________________
这是一道完善程序的试题，你只需要在下面程序标注的"@你的代码"的位置补充适当的语句或语句段使程序能正确运行即可，在提交的时候，你要提交的内容只包括补充的内容，不包括其他的代码。
1.	  #include <iostream>
2.	  #include <fstream>
3.	  #include <cstdlib>
4.	  #include <cstdio>
5.	  #include <cstring>
6.	  
7.	  using namespace std;
8.	  
9.	  void thoseyears(char *file1, char* file2)
10.	  {  
11.	      @你的代码 
12.	  }
13.	  








=====================================
D3570. 丢失的数

问题描述
　　你有n个数1，2，…，n，你不慎丢失若干，你只记得还拥有哪些，请程序帮你自己找回丢失了的那些数。
输入格式
　　第一行两个正整数，用空格隔开，第一个为n，表示你曾拥有数的数量，第二个为m，表示没有丢的数的数量。
　　接下来m行，每行一个正整数，表示没有丢的数，保证没有重复
输出格式
　　共n-m行，按从小到大的顺序分行输出丢失的数
样例输入
10 7
1
4
5
6
8
9
10
样例输出
2
3
7
数据规模和约定
　　70%的数据，m<=n<=1000
　　100%的数据，m<=n<=100000









================================================
D3568. 质数的孤独

问题描述
　　质数是孤独的，除了二三之外，身边都挤着其他合数，阻隔它们的亲密接触。
　　现在，定义一个质数的孤独值I为在数轴上离它最近的一个质数和它的差的绝对值。如：
　　I(2)=1
　　I(3)=1
　　I(5)=2
　　I(7)=2
　　I(11)=2
　　I(13)=2
　　I(17)=2
　　I(19)=2
　　I(23)=4
　　I(29)=2
　　给出一个质数p，求距离它最近的质数，以及它的孤独值。如果有两个质数和p一样近，取值较小的。
输入格式
　　一行，一个质数p
输出格式
　　一行，空格分开的两个值，第一个表示与p距离最近的质数，第二个表示p的孤独值
样例输入
5
样例输出
3 2
数据规模和约定
　　输入质数2<p<=20000





======================================================================
友好数
问题描述
　　有两个整数，如果每个整数的约数和（除了它本身以外）等于对方，我们就称这对数是友好的。例如：
　　9的约数和有：1+3=4
　　4的约数和有：1+2=3
　　所以9和4不是友好的。
　　220的约数和有：1 2 4 5 10 11 20 22 44 55 110=284
　　284的约数和有：1 2 4 71 142=220
　　所以220和284是友好的。
　　编写程序，判断两个数是否是友好数。
输入格式
　　一行，两个整数，由空格分隔
输出格式
　　如果是友好数，输出"yes"，否则输出"no"，注意不包含引号。
样例输入
220 284
样例输出
yes
数据规模和约定
　　两个整数都小于10000







======================================================================
反置数
试题来源
　　程序设计公共基础课(谌卫军)
问题描述
　　一个整数的“反置数”指的是把该整数的每一位数字的顺序颠倒过来所得到的另一个整数。如果一个整数的末尾是以0结尾，那么在它的反置数当中，这些0就被省略掉了。比如说，1245的反置数是5421，而1200的反置数是21。请编写一个程序，输入两个整数，然后计算这两个整数的反置数之和sum，然后再把sum的反置数打印出来。要求：由于在本题中需要多次去计算一个整数的反置数，因此必须把这部分代码抽象为一个函数的形式。
　　输入格式：输入只有一行，包括两个整数，中间用空格隔开。
　　输出格式：输出只有一行，即相应的结果。
　　输入输出样例
样例输入
435 754
样例输出
199






======================================================
第二题 佳佳的矩阵
【题目描述】
佳佳最喜欢上线代课了，尤其喜欢萌萌的梁恒老师。
在线代课上，佳佳最近见到了各种各样奇奇怪怪的矩阵，像什么三对角矩阵、箭形矩阵、范德蒙德矩阵……脑洞大开的佳佳决定设计属于她自己的矩阵。
  4  1
  3  2
	上面两个矩阵是佳佳给你的例子，她希望在告诉你矩阵的大小后，你能告诉她属于她自己的矩阵应该长什么样。
【输入描述】
输入一个正整数n（1≤n≤500），表示你应该输出一个n阶矩阵。
【输出描述】
	输出共包括n行，每行包含n个正整数，表示你输出的矩阵。
【样例输入】
4
【样例输出】
10 11 12 1
9 16 13 2
8 15 14 3
7 6 5 4
【注释】
	本题考查条件语句、循环语句等基本语法知识的掌握，不涉及任何算法知识。
	单个测试点时间限制：1s 空间限制：256Mb






======================================================================
汉诺双塔（提示：使用递归）
试题来源
　　NOIP2007 普及组
问题描述
　　给定A、B、C三根足够长的细柱，在A柱上放有2n个中间有孔的圆盘，共有n个不同的尺寸，每个尺寸都有两个相同的圆盘，注意这两个圆盘是不加区分的（下图为n=3的情形）。现要将这些圆盘移到C柱上，在移动过程中可放在B柱上暂存。要求：
　　（1）每次只能移动一个圆盘；
　　（2）A、B、C三根细柱上的圆盘都要保持上小下大的顺序；
　　任务：设An为2n个圆盘完成上述任务所需的最少移动次数，对于输入的n，输出An。
 
输入格式
　　一个正整数n，表示在A柱上放有2n个圆盘。
输出格式
　　仅一行，包含一个正整数, 为完成上述任务所需的最少移动次数An。
样例输入
1
样例输出
2
样例输入
2
样例输出
6
数据规模和约定
　　对于50%的数据，1<=n<=25
　　对于100%的数据，1<=n<=200
提示
设法建立An与An-1的递推关系式。
注：
（如果没学高精度，可以不用考虑后50%的数据）










======================================================================
寂寞的数
问题描述
　　道德经曰：一生二，二生三，三生万物。
　　对于任意正整数n，我们定义d(n)的值为为n加上组成n的各个数字的和。例如，d(23)=23+2+3=28, d(1481)=1481+1+4+8+1=1495。
　　因此，给定了任意一个n作为起点，你可以构造如下一个递增序列：n,d(n),d(d(n)),d(d(d(n)))....例如，从33开始的递增序列为：
　　33, 39, 51, 57, 69, 84, 96, 111, 114, 120, 123, 129, 141, ...
　　我们把n叫做d(n)的生成元，在上面的数列中，33是39的生成元，39是51的生成元，等等。有一些数字甚至可以有两个生成元，比如101，可以由91和100生成。但也有一些数字没有任何生成元，如42。我们把这样的数字称为寂寞的数字。
输入格式
　　一行，一个正整数n。
输出格式
　　按照升序输出小于n的所有寂寞的数字，每行一个。
样例输入
40
样例输出
1
3
5
7
9
20
31
数据规模和约定
　　n<=10000





======================================================
D3571. 后缀数组

问题描述
　　在模版串检索问题中，有一种非常有用的数据结构：后缀数组。对于一个串S=s[1]s[2]…s[n]（注意，下标从1开始），它的第i个后缀记为SF[i]=s[i]…s[n]，也就是从原串第i个字符开始到末尾的部分。比如串S=“liuyuchen”的后缀们为：
　　SF[1]=”liuyuchen”
　　SF[2]=”iuyuchen”
　　SF[3]=”uyuchen”
　　SF[4]=“yuchen”
　　SF[5]=“uchen”
　　SF[6]=“chen”
　　SF[7]=“hen”
　　SF[8]=“en”
　　SF[9]=“n”
　　后缀数组是指将所有后缀按字典序从小到大排序后得到的数组，例子S的后缀数组为：
　　{“chen”, “en”,”hen”, “iuyuchen”, “liuyuchen”, “n”,“uchen”, “uyuchen”, “yuchen”}
　　上述数组的元素依次为SF[6], SF[8], SF[7], SF[2], SF[1], SF[9], SF[5], SF[3], SF[4]。
　　一般来说，由于有了原串，不需要把每个后缀都完全存储。我们只需要记下后缀的起始位置，也就是SF[i]的下标i。于是之前例子的后缀数组就可以记录为各后缀的起始字符在原串S中的下标组成的序列：
　　{6, 8, 7, 2, 1, 9, 5, 3, 4}
　　请编程对输入的字符串，输出它的后缀数组对应的下标序列。
　　注意：下标从1开始计数。
输入格式
　　一行，一个字符串，只包含小写英文字母
输出格式
　　输出一行，为输入字符串的后缀数组的下标序列，两个下标之间用一个空格分隔。
样例输入
liuyuchen
样例输出
6 8 7 2 1 9 5 3 4
数据规模和约定
　　对于100%的数据，L<=100





======================================================================
黑色星期五？？
试题来源
　　程序设计公共基础课(谌卫军)
问题描述
　　有些西方人比较迷信，如果某个月的13号正好是星期五，他们就会觉得不太吉利，用古人的说法，就是“诸事不宜”。请你编写一个程序，统计出在某个特定的年份中，出现了多少次既是13号又是星期五的情形，以帮助你的迷信朋友解决难题。
　　说明：（1）一年有365天，闰年有366天，所谓闰年，即能被4整除且不能被100整除的年份，或是既能被100整除也能被400整除的年份；（2）已知1998年1月1日是星期四，用户输入的年份肯定大于或等于1998年。
　　输入格式：输入只有一行，即某个特定的年份（大于或等于1998年）。
　　输出格式：输出只有一行，即在这一年中，出现了多少次既是13号又是星期五的情形。
　　输入输出样例
样例输入
1998
样例输出
3










======================================================================
彩票
问题描述
　　为丰富男生节活动，贵系女生设置彩票抽奖环节，规则如下：
　　1、每张彩票上印有7个各不相同的号码，且这些号码的取值范围为[1, 33]；
　　2、每次在兑奖前都会公布一个由七个互不相同的号码构成的中奖号码；
　　3、共设置7个奖项，特等奖和一等奖至六等奖。兑奖规则如下：
　　特等奖：要求彩票上的7个号码都出现在中奖号码中；
　　一等奖：要求彩票上的6个号码出现在中奖号码中；
　　二等奖：要求彩票上的5个号码出现在中奖号码中；
　　……
　　六等奖：要求彩票上的1个号码出现在中奖号码中；
　　注：不考虑号码出现的顺序，例如若中奖号码为23 31 1 14 19 17 18，则彩票12 8 9 23 1 16 7由于其中有两个号码（23和1）出现在中奖号码中，所以该彩票中了五等奖。
　　现已知中奖号码和李华买的若干彩票的号码，请你写一个程序判断他的彩票中奖情况。
输入格式
　　第一行一个正整数n，表示彩票数量，第二行7个整数，表示中奖号码，下面n行每行7个整数，描述n张彩票。
输出格式
　　7个空格隔开的数字，第1个数字表示特等奖的中奖张数，第2个数字表示一等奖的中奖张数，第3个数字表示二等奖的中奖张数……第7个数字表示六等奖的中奖张数。
样例输入
3
1 2 3 4 5 6 7
11 12 13 14 15 16 17
12 13 14 15 16 17 18
8 7 10 9 31 30 29
样例输出
0 0 0 0 0 0 1
数据规模和约定
30%的数据n<=100；
　　70%的数据n<=1000；
　　100%的数据n<=100000。

　　*****提示：数组定义为全局变量，可以分配更多内存。*****

